#TomCat server port
server.port=8585

#Details for our datasource
spring.datasource.driver-class-name=org.postgresql.Driver
# !!! change to real DB name and credentials !!!
spring.datasource.url = jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
spring.datasource.username = ${POSTGRES_USER}
spring.datasource.password = ${POSTGRES_PASSWORD}

#Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.default_schema = authdbschema

#Gmail properties
spring.mail.protocol=smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=yoursupercloud@gmail.com
spring.mail.password=SuperCloudPassword
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true

liquibase.change-log=classpath:/liquibase/project-changelog.xml
liquibase.check-change-log-location=false
liquibase.enabled=true
spring.jpa.hibernate.ddl-auto=validate

server.error.whitelabel.enabled=false


#Files max size
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-file-size=100Mb
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-request-size=100Mb
#File size, above which service encryption/decrypt file (not UI)
fileservice.int.cipher-file-size=50
#Files max size to cache it in Mb
fileservice.int.cache-file-size=80
#Services url
fileservice.url =http://${FILESERVICE_HOST}:8080/
statservice.url =http://${STATSERVICE_HOST}:8989/
application.url = http://localhost:8585/
cipher.algorithm = AES/CTR/NoPadding
cipher.algorithm.name = AES
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.mapper.accept_case_insensitive_properties=true

# Run every Weekday at 1 AM [cron expression for scheduled task to clean expired passwords]
cron.expression.password-clean = 0 0 1 * * MON-FRI
# Run every Weekday at 2 AM. [cron expression for scheduled task to send notice about expiring passwords]
cron.expression.password-notify = 0 0 2 * * MON-FRI
# Run every day at 12 PM [cron expression for scheduled task to clean expired files]
cron.expression.clean-files = 0 0 12 * * ?
# Run every Monday at 12 PM [cron expression for scheduled task to post in twitter]
cron.expression.post-twitter = 0 0 12 * * MON


# JWT properties
jwt.secret = my_super_secret_secret
jwt.refreshing_minutes = 600
jwt.life_minutes = 600

#Logging properties
logging.file =  ${LOGFILE_PATH}/authservice.log


#Rabbit MQ
spring.rabbitmq.host=${RABBIT_HOST}
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBIT_USER}
spring.rabbitmq.password=${RABBIT_PASS}

#Statistics Service
statistics.enabled=true
statistics.exchange=statistic-exchange
statistics.key=statistic-key