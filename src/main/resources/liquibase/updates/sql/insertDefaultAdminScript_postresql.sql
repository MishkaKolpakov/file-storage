DO $$
declare
	_PASSWORD_ID AUTHDBSCHEMA.PASSWORDS.PASSWORD_ID%TYPE;
	_ROLE_ID AUTHDBSCHEMA.ROLES.ROLE_ID%TYPE;
	_USER_ID AUTHDBSCHEMA.USERS.USER_ID%TYPE;

BEGIN

SELECT ROLE_ID INTO _ROLE_ID FROM AUTHDBSCHEMA.ROLES WHERE ROLE_NAME='ADMIN';

IF _ROLE_ID > 0
THEN
	INSERT INTO AUTHDBSCHEMA.USERS (ROLE_ID, EMAIL, FIRST_NAME, LAST_NAME, STATUS)
	VALUES (
	_ROLE_ID,
	'user.100@i.ua',
	'ADMIN_FIRST_NAME',
	'ADMIN_LAST_NAME',
	TRUE
	) RETURNING USER_ID INTO _USER_ID;
	RAISE NOTICE 'DEFAULT ADMIN IS INSERTED.';
ELSE
	RAISE NOTICE 'ERROR INSERTING DEFAULT ADMIN';
END IF;

IF _USER_ID > 0
THEN
	INSERT INTO AUTHDBSCHEMA.PASSWORDS (PASS, EXPIRATION_TIME, STATUS, USER_ID)
	 VALUES (
	'$2a$10$xUoT6GSvexAJnt5shZsBBuekwPkSkelXu4b5C3BiObfckMjE9hlS2', -- password is: 00000   (5 zeros)
	date '2020-10-10',
	TRUE,
	_USER_ID
	);
	RAISE NOTICE 'PASSWORD FOR DEFAULT ADMIN IS INSERTED.';
ELSE
	RAISE NOTICE 'ERROR INSERTING PASSWORD FOR DEFAULT ADMIN';
END IF;
END$$;
--$$ LANGUAGE plpgsql
