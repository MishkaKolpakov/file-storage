CREATE SCHEMA AUTHDBSCHEMA; --;

-- -----------------------------------------------------
-- Table PASSWORDS
-- -----------------------------------------------------

DROP TABLE IF EXISTS AUTHDBSCHEMA.PASSWORDS ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.PASSWORDS (
  PASSWORD_ID BIGSERIAL PRIMARY KEY,
  PASS VARCHAR(256) NOT NULL,
  EXPIRATION_TIME TIMESTAMP NOT NULL,
  STATUS BOOLEAN NOT NULL);


-- -----------------------------------------------------
-- Table ROLES
-- -----------------------------------------------------
DROP TABLE IF EXISTS AUTHDBSCHEMA.ROLES ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.ROLES (
  ROLE_ID BIGSERIAL PRIMARY KEY,
  ROLE_NAME VARCHAR(45) NOT NULL);


-- -----------------------------------------------------
-- Table USERS
-- -----------------------------------------------------
DROP TABLE IF EXISTS AUTHDBSCHEMA.USERS ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.USERS (
  USER_ID BIGSERIAL PRIMARY KEY,
  ROLE_ID BIGINT NOT NULL REFERENCES AUTHDBSCHEMA.ROLES (ROLE_ID),
  EMAIL VARCHAR(128) NOT NULL,
  PASSWORD_ID BIGINT NOT NULL REFERENCES AUTHDBSCHEMA.PASSWORDS (PASSWORD_ID),
  USER_NAME VARCHAR(45) NULL,
  STATUS BOOLEAN NOT NULL);

-- -----------------------------------------------------
-- Table SECRET_KEY
-- -----------------------------------------------------
DROP TABLE IF EXISTS AUTHDBSCHEMA.SECRET_KEY ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.SECRET_KEY (
  KEY_ID BIGSERIAL PRIMARY KEY,
  EXPIRATION_DATE TIMESTAMP NOT NULL,
  STATUS BOOLEAN NOT NULL,
  KEY_VALUE VARCHAR(256) NOT NULL);


-- -----------------------------------------------------
-- Table PERMISSIONS
-- -----------------------------------------------------
DROP TABLE IF EXISTS AUTHDBSCHEMA.PERMISSIONS ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.PERMISSIONS (
  PERMISSION_ID BIGSERIAL PRIMARY KEY,
  PERMISSION_NAME VARCHAR(45) NOT NULL );


-- -----------------------------------------------------
-- Table RESOURCE
-- -----------------------------------------------------
DROP TABLE IF EXISTS AUTHDBSCHEMA.RESOURCE ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.RESOURCE (
  RESOURCE_ID BIGSERIAL PRIMARY KEY,
  KEY_ID BIGINT NOT NULL REFERENCES AUTHDBSCHEMA.SECRET_KEY (KEY_ID),
  LINK_TO_FILE VARCHAR(256) NOT NULL,
  PERMISSION_ID BIGINT REFERENCES AUTHDBSCHEMA.PERMISSIONS (PERMISSION_ID),
  OWNER_ID BIGINT NOT NULL REFERENCES AUTHDBSCHEMA.USERS (USER_ID));


-- -----------------------------------------------------
-- Table USER_FILE_ACCESS
-- -----------------------------------------------------
DROP TABLE IF EXISTS AUTHDBSCHEMA.USER_FILE_ACCESS ;

CREATE TABLE IF NOT EXISTS AUTHDBSCHEMA.USER_FILE_ACCESS (
  USER_FILE_ACCESS_ID BIGSERIAL PRIMARY KEY,
  USER_ID BIGINT NOT NULL REFERENCES AUTHDBSCHEMA.USERS (USER_ID),
  RESOURCE_ID BIGINT NOT NULL REFERENCES AUTHDBSCHEMA.RESOURCE (RESOURCE_ID));


