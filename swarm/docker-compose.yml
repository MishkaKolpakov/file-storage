version: '3'

networks:
  remote-cloud:
  secure-local:
  client-network:

volumes:
  postgres-data:
  mongo-data:
  stat-mongo-data:
  rabbit-mq:

services:
  postgres:
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=authuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=authdb
    networks:
      - secure-local
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  auth:
    image: registry.gitlab.com/kv-030.java/authservice:development
    ports:
      - "8585:8585"
    depends_on:
      - postgres
    networks:
      - secure-local
      - client-network
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=authuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=authdb
      - FILESERVICE_HOST=file
      - RABBIT_HOST=rabbitmq
      - RABBIT_USER=authuser
      - RABBIT_PASS=password
      - STATSERVICE_HOST=statistic
      - REDIS_HOST=cache
      - TWITTER_KEY
      - TWITTER_SECRET
      - TWITTER_TOKEN
      - TWITTER_TOKEN_SECRET
      - LOGFILE_PATH=/app
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 20s
  mongo:
    image: bitnami/mongodb
    networks:
      - remote-cloud
    volumes:
      - "mongo-data:/bitnami"
    ports:
      - "27017"
    environment:
      - MONGODB_USERNAME=fileuser
      - MONGODB_PASSWORD=secret
      - MONGODB_DATABASE=filedb
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  file:
    image: registry.gitlab.com/kv-030.java/fileservice:development
    networks:
      - remote-cloud
      - client-network
    environment:
      - MONGODB_HOST=mongo
      - MONGODB_USER=fileuser
      - MONGODB_PASSWORD=secret
      - MONGODB_DATABASE=filedb
      - AWS_ID
      - AWS_KEY
      - AWS_BUCKET
      - AWS_REGION
      - AUTHSERVICE_HOST=auth
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 20s
  rabbitmq:
    image: bitnami/rabbitmq
    networks:
      - secure-local
    ports:
      - '4369:4369'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    environment:
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq
      - RABBITMQ_USERNAME=authuser
      - RABBITMQ_PASSWORD=password
    volumes:
      - 'rabbit-mq:/bitnami'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 20s
      placement:
        constraints:
          - node.role == manager
  statistic:
    image: registry.gitlab.com/kv-030.java/statisticsservice:latest
    networks:
      - secure-local
    ports:
      - '8989:8989'
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_USER=authuser
      - RABBIT_PASS=password
      - MONGODB_HOST=statmongo
      - MONGODB_DATABASE=statdb
      - MONGODB_USER=statsuser
      - MONGODB_PASSWORD=secret
    depends_on:
      - rabbitmq
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 20s
  statmongo:
    image: bitnami/mongodb
    networks:
      - secure-local
    volumes:
      - "stat-mongo-data:/bitnami"
    ports:
      - "27017"
    environment:
      - MONGODB_USERNAME=statsuser
      - MONGODB_PASSWORD=secret
      - MONGODB_DATABASE=statdb
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  cache:
    image: redis:4
    networks:
      - secure-local
    ports:
      - '6379:6379'
